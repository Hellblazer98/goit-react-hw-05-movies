{"version":3,"file":"static/js/186.0238fa06.chunk.js","mappings":"uMAkDA,UA7CgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA+BF,EAAAA,EAAAA,WAAS,GAAxC,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAGQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACNL,GAAU,IACVM,EAAAA,EAAAA,IAAgBH,GACXI,MAAK,SAAAC,GACFV,EAAWU,EAAKC,QACnB,IACAC,OAAM,SAAAC,GACHb,EAAW,IACXI,EAASU,OAAOD,IAChBE,QAAQC,IAAIH,EACf,IACAI,SAAQ,WACLf,GAAU,EACb,GACR,GAAE,CAACG,KAGA,+BACKJ,IAAa,SAAC,IAAD,IACbE,IAAS,0BAAOA,IAEhBJ,EAAQmB,QACL,wBACKnB,EAAQoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACI,qCAAaD,GAAU,QACvB,uBAAIC,MAFCF,EADA,OAQnB,8EAIb,C,+LC9CKG,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sCAAmDD,IADzC,cACvBI,EADuB,yBAEtBA,EAAKjB,MAFiB,2CAAH,qDAKjBkB,EAAW,mCAAG,WAAOC,GAAP,uFACJH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA8DM,IAD1D,cACjBF,EADiB,yBAEhBA,EAAKjB,MAFW,2CAAH,sDAKXoB,EAAe,mCAAG,WAAOzB,GAAP,uFACRqB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BnB,EAA9B,oBAAiDkB,IADzC,cACrBI,EADqB,yBAEpBA,EAAKjB,MAFe,2CAAH,sDAKfqB,EAAY,mCAAG,WAAO1B,GAAP,uFACLqB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BnB,EAA9B,4BAAyDkB,IADpD,cAClBI,EADkB,yBAEjBA,EAAKjB,MAFY,2CAAH,sDAKZF,EAAe,mCAAG,WAAOH,GAAP,uFACRqB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BnB,EAA9B,4BAAyDkB,IADjD,cACrBI,EADqB,yBAEpBA,EAAKjB,MAFe,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","helpers/api.js"],"sourcesContent":["import { Loader } from \"components/Loader/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from \"helpers/api\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setStatus] = useState(false);\n    const [error, setError] = useState(null);\n\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setStatus(true)\n        getMovieReviews(movieId)\n            .then(data => {\n                setReviews(data.results);\n            })\n            .catch(err => {\n                setReviews([]);\n                setError(String(err));\n                console.log(err)\n            })\n            .finally(() => {\n                setStatus(false);\n            })\n    }, [movieId]);\n\n    return (\n        <section>\n            {isLoading && <Loader />}\n            {error && <span>{error}</span>}\n\n            {reviews.length ? \n                <ul>\n                    {reviews.map(({ id, author, content }) => \n                        <li key={id}>\n                            <h3>Author: {author || \"?\"}</h3>\n                            <p>{content}</p>\n                        </li>\n                        )}\n                </ul>\n\n            : <p>Sorry, we don't have any reviews for this movie.</p>}\n        </section>\n    )\n    \n}\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = \"afe52aa8ce58d403415529b103529ed7\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\"\n\nexport const getTrendingMovies = async () => {\n    const resp = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const FetchSearch = async (searchQuary) => {\n    const resp = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuary}`);\n    return resp.data;\n}\n\nexport const getMovieDetails = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const getMovieCast = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const getMovieReviews = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return resp.data;\n}"],"names":["useState","reviews","setReviews","isLoading","setStatus","error","setError","movieId","useParams","useEffect","getMovieReviews","then","data","results","catch","err","String","console","log","finally","length","map","id","author","content","API_KEY","BASE_URL","getTrendingMovies","axios","resp","FetchSearch","searchQuary","getMovieDetails","getMovieCast"],"sourceRoot":""}