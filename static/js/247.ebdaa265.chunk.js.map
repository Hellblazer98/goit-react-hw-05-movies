{"version":3,"file":"static/js/247.ebdaa265.chunk.js","mappings":"gNAmDA,UA3Ca,WACT,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA+BF,EAAAA,EAAAA,WAAS,GAAxC,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAGQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACNL,GAAU,IACVM,EAAAA,EAAAA,IAAaH,GACRI,MAAK,SAAAC,GACFV,EAAQU,EAAKX,KAChB,IACAY,OAAM,SAAAC,GACHZ,EAAQ,IACRI,EAASS,OAAOD,GACnB,IACAE,SAAQ,WACLZ,GAAU,EACb,GACR,GAAE,CAACG,KAGA,+BACCJ,IAAa,SAAC,IAAD,IACbE,IAAS,0BAAOA,IACZJ,EAAKgB,QACF,wBACKhB,EAAKiB,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,aAAcC,EAA7C,EAA6CA,cAA7C,OACN,2BACI,gBAAKC,IAAKF,EAAY,UAjClC,mCAiCkC,OAAgBA,GAAiBG,EAAUC,IAAKH,KACtE,wBAAKH,KACL,uCAAeD,OAHVE,EADH,OAQZ,mFAIjB,C,+LC/CKM,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sCAAmDD,IADzC,cACvBI,EADuB,yBAEtBA,EAAKnB,MAFiB,2CAAH,qDAKjBoB,EAAW,mCAAG,WAAOC,GAAP,uFACJH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA8DM,IAD1D,cACjBF,EADiB,yBAEhBA,EAAKnB,MAFW,2CAAH,sDAKXsB,EAAe,mCAAG,WAAO3B,GAAP,uFACRuB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BrB,EAA9B,oBAAiDoB,IADzC,cACrBI,EADqB,yBAEpBA,EAAKnB,MAFe,2CAAH,sDAKfF,EAAY,mCAAG,WAAOH,GAAP,uFACLuB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BrB,EAA9B,4BAAyDoB,IADpD,cAClBI,EADkB,yBAEjBA,EAAKnB,MAFY,2CAAH,sDAKZuB,EAAe,mCAAG,WAAO5B,GAAP,uFACRuB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BrB,EAA9B,4BAAyDoB,IADjD,cACrBI,EADqB,yBAEpBA,EAAKnB,MAFe,2CAAH,qD","sources":["components/Cast/Cast.jsx","helpers/api.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from \"helpers/api\";\nimport NotFound from '../../image/not-found.jpg';\nimport { Loader } from \"components/Loader/Loader\";\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const [isLoading, setStatus] = useState(false);\n    const [error, setError] = useState(null);\n\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setStatus(true)\n        getMovieCast(movieId)\n            .then(data => {\n                setCast(data.cast);\n            })\n            .catch(err => {\n                setCast([]);\n                setError(String(err));\n            })\n            .finally(() => {\n                setStatus(false);\n            })\n    }, [movieId]);\n\n    return (\n        <section>\n        {isLoading && <Loader />}\n        {error && <span>{error}</span>}\n            {cast.length ?\n                <ul>\n                    {cast.map(({ character, name, credit_id, profile_path, original_name }) =>\n                        <li key={credit_id}>\n                            <img src={profile_path ? `${IMG_URL}${profile_path}` : NotFound} alt={original_name} />\n                            <h3>{name}</h3>\n                            <p>Character: {character}</p>\n                        </li>\n                    )}\n                </ul>\n                : <p>Sorry, we don't have cast information for this movie.</p>}\n\n        </section>\n    )\n}\n\nexport default Cast","import axios from \"axios\";\n\nconst API_KEY = \"afe52aa8ce58d403415529b103529ed7\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\"\n\nexport const getTrendingMovies = async () => {\n    const resp = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const FetchSearch = async (searchQuary) => {\n    const resp = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuary}`);\n    return resp.data;\n}\n\nexport const getMovieDetails = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const getMovieCast = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const getMovieReviews = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return resp.data;\n}"],"names":["useState","cast","setCast","isLoading","setStatus","error","setError","movieId","useParams","useEffect","getMovieCast","then","data","catch","err","String","finally","length","map","character","name","credit_id","profile_path","original_name","src","NotFound","alt","API_KEY","BASE_URL","getTrendingMovies","axios","resp","FetchSearch","searchQuary","getMovieDetails","getMovieReviews"],"sourceRoot":""}