{"version":3,"file":"static/js/549.2b6bffae.chunk.js","mappings":"mTAGaA,EAAOC,EAAAA,GAAAA,GAAH,2IAQJC,GAAcD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mWAkBXG,EAAWH,EAAAA,GAAAA,GAAH,0JAWRI,EAAWJ,EAAAA,GAAAA,GAAH,sGAIRK,EAAYL,EAAAA,GAAAA,IAAH,yC,mMC1ChBM,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sCAAmDD,IADzC,cACvBI,EADuB,yBAEtBA,EAAKC,MAFiB,2CAAH,qDAKjBC,EAAW,mCAAG,WAAOC,GAAP,uFACJJ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA8DO,IAD1D,cACjBH,EADiB,yBAEhBA,EAAKC,MAFW,2CAAH,sDAKXG,EAAe,mCAAG,WAAOC,GAAP,uFACRN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BQ,EAA9B,oBAAiDT,IADzC,cACrBI,EADqB,yBAEpBA,EAAKC,MAFe,2CAAH,sDAKfK,EAAY,mCAAG,WAAOD,GAAP,uFACLN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BQ,EAA9B,4BAAyDT,IADpD,cAClBI,EADkB,yBAEjBA,EAAKC,MAFY,2CAAH,sDAKZM,EAAe,mCAAG,WAAOF,GAAP,uFACRN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BQ,EAA9B,4BAAyDT,IADjD,cACrBI,EADqB,yBAEpBA,EAAKC,MAFe,2CAAH,qD,uJCvBfO,EAAYlB,EAAAA,GAAAA,QAAH,6EAMTmB,EAAanB,EAAAA,GAAAA,IAAH,0EAMVoB,EAASpB,EAAAA,GAAAA,IAAH,6CAINqB,EAAWrB,EAAAA,GAAAA,IAAH,wBAGRsB,EAAWtB,EAAAA,GAAAA,EAAH,2C,SCfRuB,EAAY,SAAC,GAA4F,IAAD,IAAzFC,QAAyF,IAA9EC,OAAAA,OAA8E,MAArE,GAAqE,EAAjEC,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,YAAaC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,SAChG,OACI,UAACZ,EAAD,YACI,SAACC,EAAD,WACI,SAACC,EAAD,CAAQW,IAAKJ,EAAW,UANxB,mCAMwB,OAAgBA,IAAgB,SAACK,EAAA,EAAD,IAAWC,IAAKP,OAE5E,UAACL,EAAD,YACI,0BAAKK,EAAOE,EAAY,WAAOA,EAAaM,MAAM,EAAG,GAA7B,KAAqC,OAC7D,UAACZ,EAAD,0BAAuBO,EAAY,UAAMM,KAAKC,MAAqB,GAAfP,GAAjB,KAAyC,cAC5E,sCACA,SAACP,EAAD,UAAWQ,GAAY,aACvB,oCACA,SAACR,EAAD,UAAWG,EAAOY,OAASZ,EAAOa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAAQ,iBAMvF,E,8BCmCD,EAlDqB,WAAO,IAAD,IACf1B,GAAY2B,EAAAA,EAAAA,MAAZ3B,QACF4B,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAE9C,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOzB,EAAP,KAAgB0B,EAAhB,KACA,GAA+BD,EAAAA,EAAAA,WAAS,GAAxC,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACNH,GAAU,IACVtC,EAAAA,EAAAA,IAAgBC,GACXyC,MAAK,SAAA7C,GACFuC,EAAWvC,EACd,IACA8C,OAAM,SAAAC,GACHR,EAAW,CAAC,GACZI,EAASK,OAAOD,GACnB,IACAE,SAAQ,WACLR,GAAU,EACb,GACR,GAAE,CAACrC,KAGA,6BACI,4BACI,UAAC,KAAD,CAAY8C,GAAIhB,EAAOiB,QAAvB,WAAgC,SAAC,MAAD,CAAaC,KAAK,OAAlD,aACCvC,IAAW,SAACD,EAAD,CAAWC,QAASA,IAC/B2B,IAAa,SAACnB,EAAA,EAAD,IACbqB,IAAS,0BAAOA,QAErB,mDACA,UAAC,KAAD,YACI,yBACI,SAAC,KAAD,CAAaQ,GAAG,OAAhB,qBAEJ,yBACI,SAAC,KAAD,CAAaA,GAAG,UAAhB,2BAKR,SAAC,EAAAG,SAAD,CAAUC,UAAU,SAACjC,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,QAIf,C","sources":["components/Cast/Cast.styled.js","helpers/api.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const List = styled.ul`\n    display: flex;\n    margin-top: 20px;\n    flex-direction:column;\n    list-style-type: none;\n    gap: 10px;\n`;\n\nexport const LinkDetails = styled(Link)`\n  padding: 4px;\n  border-radius: 4px;\n  border: 1px solid grey;\n  text-decoration: none;\n  color: black;\n  font-size: 12px;\n  font-weight: 500;\n\n  :hover {\n    background-color: lightblue;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }    \n`;\n\n\n\nexport const CastList = styled.ul`\n  --items: 6;\n  --gap: 20px;\n\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--gap);\n  padding: 50px;\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc((100% - var(--gap) * (var(--items) - 1)) / var(--items));\n`;\n\nexport const CastImage = styled.img`\n  width: 200px; \n`;\n\n","import axios from \"axios\";\n\nconst API_KEY = \"afe52aa8ce58d403415529b103529ed7\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\"\n\nexport const getTrendingMovies = async () => {\n    const resp = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const FetchSearch = async (searchQuary) => {\n    const resp = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuary}`);\n    return resp.data;\n}\n\nexport const getMovieDetails = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const getMovieCast = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const getMovieReviews = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return resp.data;\n}","import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const PosterWrap = styled.div`\n  flex-basis: 320px;\n  margin-bottom: 20px;\n  \n`;\n\nexport const Poster = styled.img`\n  min-width: 200px;\n`;\n\nexport const InfoWrap = styled.div`\n`;\n\nexport const InfoText = styled.p`\n  margin: 16px 0;\n`;","import { Loader } from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\nimport { Container, InfoText, InfoWrap, Poster, PosterWrap } from './MovieInfo.styled';\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const MovieInfo = ({ details: { genres = [], title, poster_path, release_date, vote_average, overview } }) => {\n    return (\n        <Container>\n            <PosterWrap>\n                <Poster src={poster_path ? `${IMG_URL}${poster_path}` : <Loader/>} alt={title} />\n            </PosterWrap>\n            <InfoWrap>\n                <h2>{title}{release_date ? `(${release_date.slice(0, 4)})` : ''}</h2>\n                <InfoText>User Score: {vote_average ? `${Math.round(vote_average * 10)}%` : 'Empty..'}</InfoText>\n                <h3>Overview</h3>\n                <InfoText>{overview || \"Oops...\"}</InfoText>\n                <h3>Genres</h3>\n                <InfoText>{genres.length ? genres.map(genre => genre.name).join(\", \") : \"Oops...\"}</InfoText>\n            </InfoWrap>\n                \n\n        </Container>\n    )\n}\n\nMovieInfo.propTypes = {\n  details: PropTypes.shape({\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n      release_date: PropTypes.string,\n      vote_average: PropTypes.number,\n      overview: PropTypes.string,\n    }).isRequired,\n};\n","import { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { getMovieDetails } from \"helpers/api\";\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo\";\nimport { GoBackLink } from \"components/SharedLayout/SharedLayout.styled\";\nimport { HiArrowLeft } from \"react-icons/hi\";\nimport { LinkDetails, List } from \"components/Cast/Cast.styled\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const location = useLocation();\n    const goBack = useRef(location.state?.from ?? \"/\");\n\n    const [details, setDetails] = useState({});\n    const [isLoading, setStatus] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setStatus(true)\n        getMovieDetails(movieId)\n            .then(data => {\n                setDetails(data);\n            })\n            .catch(err => {\n                setDetails({});\n                setError(String(err));\n            })\n            .finally(() => {\n                setStatus(false);\n            })\n    }, [movieId]);\n\n    return (\n        <main>\n            <div>\n                <GoBackLink to={goBack.current}><HiArrowLeft size='12'/>Go back</GoBackLink>\n                {details && <MovieInfo details={details} />}\n                {isLoading && <Loader />}\n                {error && <span>{error}</span>}\n            </div>\n            <p>Additional information</p>\n            <List>\n                <li>\n                    <LinkDetails to=\"cast\">Cast</LinkDetails>\n                </li>\n                <li>\n                    <LinkDetails to=\"reviews\">Reviews</LinkDetails>\n                </li>\n            </List>\n\n            \n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>\n        </main>\n    )\n}\n\nexport default MovieDetails;"],"names":["List","styled","LinkDetails","Link","CastList","CastItem","CastImage","API_KEY","BASE_URL","getTrendingMovies","axios","resp","data","FetchSearch","searchQuary","getMovieDetails","movieId","getMovieCast","getMovieReviews","Container","PosterWrap","Poster","InfoWrap","InfoText","MovieInfo","details","genres","title","poster_path","release_date","vote_average","overview","src","Loader","alt","slice","Math","round","length","map","genre","name","join","useParams","location","useLocation","goBack","useRef","state","from","useState","setDetails","isLoading","setStatus","error","setError","useEffect","then","catch","err","String","finally","to","current","size","Suspense","fallback"],"sourceRoot":""}