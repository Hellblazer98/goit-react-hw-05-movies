{"version":3,"file":"static/js/247.2edc2583.chunk.js","mappings":"iOAoDA,UA3Ca,WACT,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA+BF,EAAAA,EAAAA,WAAS,GAAxC,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAGQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACNL,GAAU,IACVM,EAAAA,EAAAA,IAAaH,GACRI,MAAK,SAAAC,GACFV,EAAQU,EAAKX,KAChB,IACAY,OAAM,SAAAC,GACHZ,EAAQ,IACRI,EAASS,OAAOD,GACnB,IACAE,SAAQ,WACLZ,GAAU,EACb,GACR,GAAE,CAACG,KAGA,+BACCJ,IAAa,SAAC,IAAD,IACbE,IAAS,0BAAOA,IACZJ,EAAKgB,QACF,SAAC,KAAD,UACKhB,EAAKiB,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,aAAcC,EAA7C,EAA6CA,cAA7C,OACN,UAAC,KAAD,YACI,SAAC,KAAD,CAAWC,IAAKF,EAAY,UAjCxC,mCAiCwC,OAAgBA,GAAiBG,EAAUC,IAAKH,KAC5E,wBAAKH,KACL,uCAAeD,OAHJE,EADT,OAQZ,mFAIjB,C,mMC/CYM,EAAOC,EAAAA,GAAAA,GAAH,2IAQJC,GAAcD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mWAkBXG,EAAWH,EAAAA,GAAAA,GAAH,0JAWRI,EAAWJ,EAAAA,GAAAA,GAAH,sGAIRK,EAAYL,EAAAA,GAAAA,IAAH,yC,mMC1ChBM,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sCAAmDD,IADzC,cACvBI,EADuB,yBAEtBA,EAAK1B,MAFiB,2CAAH,qDAKjB2B,EAAW,mCAAG,WAAOC,GAAP,uFACJH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA8DM,IAD1D,cACjBF,EADiB,yBAEhBA,EAAK1B,MAFW,2CAAH,sDAKX6B,EAAe,mCAAG,WAAOlC,GAAP,uFACR8B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8B5B,EAA9B,oBAAiD2B,IADzC,cACrBI,EADqB,yBAEpBA,EAAK1B,MAFe,2CAAH,sDAKfF,EAAY,mCAAG,WAAOH,GAAP,uFACL8B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8B5B,EAA9B,4BAAyD2B,IADpD,cAClBI,EADkB,yBAEjBA,EAAK1B,MAFY,2CAAH,sDAKZ8B,EAAe,mCAAG,WAAOnC,GAAP,uFACR8B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8B5B,EAA9B,4BAAyD2B,IADjD,cACrBI,EADqB,yBAEpBA,EAAK1B,MAFe,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/Cast/Cast.styled.js","helpers/api.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from \"helpers/api\";\nimport NotFound from '../../image/not-found.jpg';\nimport { Loader } from \"components/Loader/Loader\";\nimport { CastImage, CastItem, CastList } from \"./Cast.styled\";\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const [isLoading, setStatus] = useState(false);\n    const [error, setError] = useState(null);\n\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setStatus(true)\n        getMovieCast(movieId)\n            .then(data => {\n                setCast(data.cast);\n            })\n            .catch(err => {\n                setCast([]);\n                setError(String(err));\n            })\n            .finally(() => {\n                setStatus(false);\n            })\n    }, [movieId]);\n\n    return (\n        <section>\n        {isLoading && <Loader />}\n        {error && <span>{error}</span>}\n            {cast.length ?\n                <CastList>\n                    {cast.map(({ character, name, credit_id, profile_path, original_name }) =>\n                        <CastItem key={credit_id}>\n                            <CastImage src={profile_path ? `${IMG_URL}${profile_path}` : NotFound} alt={original_name} />\n                            <h3>{name}</h3>\n                            <p>Character: {character}</p>\n                        </CastItem>\n                    )}\n                </CastList>\n                : <p>Sorry, we don't have cast information for this movie.</p>}\n\n        </section>\n    )\n}\n\nexport default Cast","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const List = styled.ul`\n    display: flex;\n    margin-top: 20px;\n    flex-direction:column;\n    list-style-type: none;\n    gap: 10px;\n`;\n\nexport const LinkDetails = styled(Link)`\n  padding: 4px;\n  border-radius: 4px;\n  border: 1px solid grey;\n  text-decoration: none;\n  color: black;\n  font-size: 12px;\n  font-weight: 500;\n\n  :hover {\n    background-color: lightblue;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }    \n`;\n\n\n\nexport const CastList = styled.ul`\n  --items: 6;\n  --gap: 20px;\n\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--gap);\n  padding: 50px;\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc((100% - var(--gap) * (var(--items) - 1)) / var(--items));\n`;\n\nexport const CastImage = styled.img`\n  width: 200px; \n`;\n\n","import axios from \"axios\";\n\nconst API_KEY = \"afe52aa8ce58d403415529b103529ed7\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\"\n\nexport const getTrendingMovies = async () => {\n    const resp = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const FetchSearch = async (searchQuary) => {\n    const resp = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuary}`);\n    return resp.data;\n}\n\nexport const getMovieDetails = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const getMovieCast = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n    return resp.data;\n}\n\nexport const getMovieReviews = async (movieId) => {\n    const resp = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return resp.data;\n}"],"names":["useState","cast","setCast","isLoading","setStatus","error","setError","movieId","useParams","useEffect","getMovieCast","then","data","catch","err","String","finally","length","map","character","name","credit_id","profile_path","original_name","src","NotFound","alt","List","styled","LinkDetails","Link","CastList","CastItem","CastImage","API_KEY","BASE_URL","getTrendingMovies","axios","resp","FetchSearch","searchQuary","getMovieDetails","getMovieReviews"],"sourceRoot":""}